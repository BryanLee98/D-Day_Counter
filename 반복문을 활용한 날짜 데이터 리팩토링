Object.keys() 는 객체  안에 있는 키들만 가지고 오는 매써드이다.


  const timeKeys = Object.keys(remainObj);
  console.log(timeKeys);
를 통해 remainObj 객체 안에 있는 Key들을 모두 가지고 왔음. console.log를 통해 가져온 결과는 다음과 같다.

['remainDate', 'remainHour', 'remainMin', 'remainSec'] <<< 이거 배열이다.
0: "remainDate"
1: "remainHour"
2: "remainMin"
3: "remainSec"
length: 4
[[Prototype]]: Array(0)


  const timeKeys = Object.keys(remainObj);
  const docKeys = Object.keys(documentObj);

  for (let i = 0; i < timeKeys.length; i = i + 1) {
    console.log(documentObj[docKeys[i]]); [] (브라켓 노테이션)을 이용하여 docKeys의 속성에 접근을 한다.
  } 이때 docKeys 안에 담겨 있는 요소 하나하나 ex) documentObj 안에 있는 days, hours, min, sec 를 문자열 형태로 브라켓 노테이션에 넣어 가져온다.

  위의 코드를 실행시켰을 시, documentObj 안에 있는 모든 태그를 들고 온다. 결과는 다음과 같다.

 <span id="days">1</span>
 <span id="hours">5</span>
 <span id="min">44</span>
 <span id="sec">23</span>

이와 같이 documentObj가 가지고 있는 속성 태그들을 모두 가지고 온다. 이것이 의미하는 것은,

documentObj[docKeys[i]] 자체가 바로 태그이다.


  const remainObj = {
    remainDate: Math.floor(remain / 3600 / 24),
    remainHour: Math.floor((remain / 3600) % 24),
    remainMin: Math.floor((remain / 60) % 60),
    remainSec: Math.floor(remain % 60),
  };
  const documentObj = {
    days: document.getElementById("days"),
    hours: document.getElementById("hours"),
    min: document.getElementById("min"),
    sec: document.getElementById("sec"),
  };

  ;timeKeys 라는 변수 안에는 remainObj의 객체들을 가지고 있다.
  const timeKeys = Object.keys(remainObj); 
  ;docKeys 라는 변수 안에는 documentObj의 객체들을 가지고 있다.
  const docKeys = Object.keys(documentObj);

  for (let i = 0; i < timeKeys.length; i = i + 1) {
    documentObj[docKeys[i]].textContent = remainObj[timeKeys[i]];
  }

  위의 반복문을 sudo 코드로 바꿔 말해본다면 다음과 같다.
  1. let i = 0, i라는 변수를 반복문 안에 선언한다. (최초문)
  2. i는 timeKeys가 가지고 있는 배열들의 갯수보다 적을 시 종료하도록 한다. (조건문)
  3. 반복문의 로직이 종료될 때 마다 i 는 +1 씩 증가 하도록 한다. (증감문)
  4. 반복문의 로직은 다음과 같다.
  4-1. docKeys는 documentObj가 지닌 객체들의 Key를 가지고 있다. 그것들을 하나씩 배열 속 갯수에 맞춰 가지고 온다.
  4-2. documentObj 의 days 경우에는 html 파일에서 "days"라는 아이디를 가진 속성 태그를 불러 가져오기로 한다.
  4-3. 따라서 "days"가 지난 속성 태그 <span id="days">0</span>를 불러온다. 다른 나머지 hours, min, sec도 반복한다.
  4-4. 속성 태그를 불러왔다면 할 수 있는 것이 있다. 바로 textContent를 이용한 변경이다.
  5. 하지만 임의로 우리가 맘대로 변경해서는 안되고, 설정된 시간 값을 넣어줘야 한다.
  5-1. 놀랍게도 우리는 그걸 remainObj에 만들어 놓았다.
  5-2. timeKeys 안에는 remainObj의 객체들을 가지고 있다. 그렇기에 remainDate의 값 또한 지니고 있다.
  5-3. 반복문을 활용하여 timeKeys가 가진 remainObj 객체들을 하나씩 가지고 오고, 그것을 문자열로 변환하여 
  5-4. docKeys가 불러온 속성 태그에 textContent로 불러온다.
  6. 위 순서들을 timeKeys.length , 즉 timeKeys가 가지고 온 배열의 객체 갯수을 넘지 않을 때까지 반복한다.

